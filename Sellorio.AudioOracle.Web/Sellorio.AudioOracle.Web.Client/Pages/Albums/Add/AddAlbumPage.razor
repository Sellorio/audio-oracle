@page "/albums/add"
@using Sellorio.AudioOracle.Models.Metadata
@using Sellorio.AudioOracle.Models.Search
@using Sellorio.AudioOracle.ServiceInterfaces.Search
@using System.Web
@using Sellorio.AudioOracle.Web.Client.Library.Providers.DisableState
@inject ISearchService SearchService
@inject NavigationManager NavigationManager

<AoPanel>
	<AoForm OnValidSubmit="SearchAsync">
		<AoTextField Label="Search" @bind-Value="searchText" Required MaxLength="200" /> 
	</AoForm>
</AoPanel>
<AoSpace />
<AoBoxLoader Loading="isLoading">
	@if (searchResult == null)
	{
		<AoInformation Message="Use the search above to search for an album/track using the available providers." />
	}
	else if (searchResult.WasSuccess)
	{
		if (searchResult.Value!.Count == 0)
		{
			<AoInformation Message="No results were found for the given search." />
		}
		else
		{
			<AoGridList ClickableRows>
				<thead>
					<tr>
						<th>Art</th>
						<th>Title</th>
						<th>Album</th>
						<th>Artists</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var i in searchResult.Value)
					{
						var item = i;

						<tr @onclick="() => SelectSearchResultAsync(item)">
							<td>
								@if (item.AlbumArtUrl != null)
								{
									<img src="@($"/pf?url={HttpUtility.UrlEncode(item.AlbumArtUrl)}")">
								}
								else
								{
									<AoImagePlaceholder />
								}
							</td>
							<td>@item.Title</td>
							<td>@item.AlbumTitle</td>
							<td>
								@if (item.ArtistNames != null)
								{
									@string.Join(", ", item.ArtistNames)
								}
							</td>
						</tr>
					}
				</tbody>
			</AoGridList>
		}
	}
</AoBoxLoader>

@code {
	string? searchText;
	ValueResult<IList<SearchResult>>? searchResult;
	bool isLoading;

	[CascadingParameter]
	public required IDialogProvider DialogProvider { get; set; }

	async Task SearchAsync()
	{
		isLoading = true;

		try
		{
			searchResult = await SearchService.SearchAsync(searchText!);
		}
		finally
		{
			isLoading = false;
		}
	}

	async Task SelectSearchResultAsync(SearchResult item)
	{
		var result = await DialogProvider.ShowDialog(() => new AddAlbumDialog { SearchResult = item });

		if (result.WasSuccess)
		{
			NavigationManager.NavigateTo($"/albums/{result.Value.Id}");
		}
	}
}
