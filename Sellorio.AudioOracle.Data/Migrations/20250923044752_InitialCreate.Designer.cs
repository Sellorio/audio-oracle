// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sellorio.AudioOracle.Data;

#nullable disable

namespace Sellorio.AudioOracle.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250923044752_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Content.FileContentData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("FileContents");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Content.FileInfoData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalUrl")
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.HasIndex("OriginalUrl")
                        .IsUnique();

                    b.ToTable("FileInfos");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.AlbumArtistData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("AlbumArtists");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.AlbumData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumArtId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternateTitle")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<ushort?>("ReleaseYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceUrlId")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<ushort>("TrackCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlbumArtId");

                    b.HasIndex("SourceId");

                    b.HasIndex("Source", "SourceId")
                        .IsUnique();

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.ArtistData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceUrlId")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Source", "SourceId")
                        .IsUnique();

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.ArtistNameData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("ArtistNames");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.TrackArtistData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("TrackId");

                    b.ToTable("TrackArtists");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.TrackData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlbumArtOverrideId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternateTitle")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadSource")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadSourceId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloadSourceUrlId")
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Filename")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<bool>("IsRequested")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MetadataSource")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MetadataSourceId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("MetadataSourceUrlId")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusText")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TrackNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlbumArtOverrideId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("MetadataSource", "MetadataSourceId")
                        .IsUnique();

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Sessions.SessionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastAccessedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.TaskQueue.QueuedTaskData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HandlerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte>("Lives")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ObjectId2")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("QueuedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QueuedAt");

                    b.ToTable("QueuedTasks");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Content.FileInfoData", b =>
                {
                    b.HasOne("Sellorio.AudioOracle.Data.Content.FileContentData", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.AlbumArtistData", b =>
                {
                    b.HasOne("Sellorio.AudioOracle.Data.Metadata.AlbumData", "Album")
                        .WithMany("Artists")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellorio.AudioOracle.Data.Metadata.ArtistData", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.AlbumData", b =>
                {
                    b.HasOne("Sellorio.AudioOracle.Data.Content.FileInfoData", "AlbumArt")
                        .WithMany()
                        .HasForeignKey("AlbumArtId");

                    b.Navigation("AlbumArt");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.ArtistNameData", b =>
                {
                    b.HasOne("Sellorio.AudioOracle.Data.Metadata.ArtistData", "Artist")
                        .WithMany("ArtistNames")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.TrackArtistData", b =>
                {
                    b.HasOne("Sellorio.AudioOracle.Data.Metadata.ArtistData", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sellorio.AudioOracle.Data.Metadata.TrackData", "Track")
                        .WithMany("Artists")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.TrackData", b =>
                {
                    b.HasOne("Sellorio.AudioOracle.Data.Content.FileInfoData", "AlbumArtOverride")
                        .WithMany()
                        .HasForeignKey("AlbumArtOverrideId");

                    b.HasOne("Sellorio.AudioOracle.Data.Metadata.AlbumData", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("AlbumArtOverride");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.AlbumData", b =>
                {
                    b.Navigation("Artists");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.ArtistData", b =>
                {
                    b.Navigation("ArtistNames");
                });

            modelBuilder.Entity("Sellorio.AudioOracle.Data.Metadata.TrackData", b =>
                {
                    b.Navigation("Artists");
                });
#pragma warning restore 612, 618
        }
    }
}
